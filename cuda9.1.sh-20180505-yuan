#!/bin/bash

# add variables
i1=0
if [ "$1" ]; then
	i1=$1
fi

# add functions
function prompt()
{
	read -p "$1 [YES/NO]: " input
}

function myechoh0()
{
	echo
	echo '==========================================================='
	echo "$1"
	echo '==========================================================='
	echo
}
function myechoh1()
{
	echo
	if [ "$1" ]; then
		# 蓝底白字
		echo -e "\033[44;37m --> $i1. $1\033[0m"
	fi
	i1=$[$i1+1]
}
function myechoh2()
{
	echo
	# 红色字
	#echo -e "\033[31m - $1 \033[0m"
	# 绿色字
	echo -e "\033[32m - $1 \033[0m"
	# 红底白字
	#echo -e "\033[41;37m- $1\033[0m"
}
function myechoh3()
{
	echo
	echo -e "\t[ $1 ]"
}
function myechoh4()
{
	echo
	echo -e "\t\t* $1"
}

function myechoy()
{
	# 黄底黑字
	echo -e "\t\t\033[43;30m$1\033[0m"
	#echo -e "\t\t$1"
}

function mysource()
{
	(source $1 $i1)
	i1=$[$i1+1]
}



# new chapter
myechoh1 'CUDA'

myechoh2 'install Nvidia driver'
myechoh3 'remove old Nvidia driver'
	#sudo apt-get purge nvidia*
myechoh3 'blacklist nouveau'
	#cd /etc/modprobe.d/
	#sudo sh -c "echo 'blacklist nouveau' >> blacklist-nouveau.conf"
	#sudo sh -c "echo 'options nouveau modset=0' >> blacklist-nouveau.conf"
	#cd -
	#sudo update-initramfs -u
	#lsmod | grep nouveau
myechoh3 'init 3 and installation'
	read -p 'Please enter console with ctrl+alt+F1, and then run this script again [YES/NO] '
#	sudo service lightdm stop
#	sudo init 3
	cd /home/xy2/tools/GPU/
	sudo ./NVIDIA-Linux-x86_64-390.48.run -no-x-check -no-nouveau-check -no-opengl-files
	cd -
#	sudo service lightdm start

#	lspci | grep -i nvidia
#	sudo dpkg --list | grep nvidia-*
	#nvidia-smi

myechoh2 'install CUDA'
myechoh3 'CUDA and patches'
myechoh4 'https://developer.nvidia.com/cuda-downloads?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=deblocal'
	# CUDA base
		#cd ~/tools/GPU/
		#sudo dpkg -i cuda-repo-ubuntu1604-9-1-local_9.1.85-1_amd64.deb
		#sudo dpsudo apt-key add /var/cuda-repo-9-1-local/7fa2af80.pub
		#sudo dpsudo apt-get update
		#sudo dpsudo apt-get install cuda
	# CUDA patch 1
		#sudo dpkg -i cuda-repo-ubuntu1604-9-1-local-cublas-performance-update-1_1.0-1_amd64.deb
	# CUDA patch 2
		#sudo dpkg -i cuda-repo-ubuntu1604-9-1-local-compiler-update-1_1.0-1_amd64.deb
	# CUDA patch 3
		#sudo dpkg -i cuda-repo-ubuntu1604-9-1-local-cublas-performance-update-3_1.0-1_amd64.deb
	# CUDA env setup
		#cd -

myechoh2 'configurate CUDA'
myechoh4 'https://developer.download.nvidia.com/compute/cuda/9.1/Prod/docs/sidebar/CUDA_Installation_Guide_Linux.pdf'
	# ~/.bashrc
	#echo 'export CUDA_HOME=/usr/local/cuda' | tee -a ~/.bashrc
	#echo 'export PATH=$PATH:$CUDA_HOME/bin' | tee -a ~/.bashrc
	#echo 'export LD_LIBRARY_PATH=$CUDA_HOME/lib64' | tee -a ~/.bashrc
	#source ~/.bashrc

	# /etc/profile
	#echo 'export PATH=/usr/local/cuda/bin:$PATH' | sudo tee -a /etc/profile
	#echo 'export LD_LIBRARY_PATH=/usr/local/cuda/lib64' | sudo tee -a /etc/profile

myechoh4 'https://www.2cto.com/kf/201612/578337.html'
	myechoy 'CUDA driver version'
	#cat /proc/driver/nvidia/version 
	myechoy 'nvcc'
	#nvcc -V 

myechoh2 'CUDA cuDNN (nvcc)'
myechoh4 'https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html'
	#cd ~/tools/GPU/cuDNN/
# way 1
	#cp cudnn-9.1-linux-x64-v7.1.solitairetheme8 cudnn-9.1-linux-x64-v7.1.tgz
	#tar -xvf cudnn-9.1-linux-x64-v7.1.tgz
	#sudo cp cuda/include/cudnn.h /usr/local/cuda/include
	#sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64
	#sudo chmod a+r /usr/local/cuda/include/cudnn.h
	myechoy 'libcudnn'
	#echo '/usr/local/cuda/lib64/libcudnn'
	#/usr/local/cuda/lib64/libcudnn*
# way 2
#	sudo dpkg -i libcudnn7_7.1.3.16-1+cuda9.1_amd64.deb
#	sudo dpkg -i libcudnn7-dev_7.1.3.16-1+cuda9.1_amd64.deb
#	sudo dpkg -i libcudnn7-doc_7.1.3.16-1+cuda9.1_amd64.deb
	#cd -

	#prompt 'set USE_CUDNN to 1 in Makefile.config'

echo
echo 'End'
