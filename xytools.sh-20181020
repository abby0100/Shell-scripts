#!/bin/bash


# add variables
#CWD=$1
wordlength=20
wordblank='                    '
command=$1

#echo
#echo -e "\033[30m 黑色字oldboy trainning \033[0m"
#echo -e "\033[31m 红色字oldboy trainning \033[0m"
#echo -e "\033[32m 绿色字oldboy trainning \033[0m"
#echo -e "\033[33m 黄色字oldboy trainning \033[0m"
#echo -e "\033[34m 蓝色字oldboy trainning \033[0m"
#echo -e "\033[35m 紫色字oldboy trainning \033[0m"
#echo -e "\033[36m 天蓝字oldboy trainning \033[0m"
#echo -e "\033[37m 白色字oldboy trainning \033[0m"
#echo
#echo -e "\033[40;37m 黑底白字 welcome to old1boy\033[0m"
#echo -e "\033[41;37m 红底白字 welcome to old2boy\033[0m"
#echo -e "\033[42;37m 绿底白字 welcome to old3boy\033[0m"
#echo -e "\033[43;37m 黄底白字 welcome to old4boy\033[0m"
#echo -e "\033[44;37m 蓝底白字 welcome to old5boy\033[0m"
#echo -e "\033[45;37m 紫底白字 welcome to old6boy\033[0m"
#echo -e "\033[46;37m 天蓝白字 welcome to old7boy\033[0m"
#echo -e "\033[47;30m 白底黑字 welcome to old8boy\033[0m"
#echo

#--------------------------------------head------------------------------------#

# add functions
function check-permission {
    echo 'check-permission'
    echo

	case $USER in
		root)
			echo 'You are root, go on...'
			;;
		*)
			echo 'You are '${USER}', please "sudo -s"'
			exit
			;;
	esac
}
function myecho () {
	if [ "$1" ]; then
		echo -e '\t'"$1"
	fi
}
# highlight title
function myhighlight()
{
	echo
	if [ "$1" ]; then
		# 黄底黑字
		echo -e "\033[43;30m$1\033[0m"
	fi
}
function myprompt()
{
	read -p "$1 [YES/NO]: " input
}


# task title
function myecho1task()
{
	echo
	if [ "$1" ]; then
		# 蓝底白字
		echo -e "\033[44;37m ${1} \033[0m"
		#printf "\033[44;37m %-${wordlength}s \n\033[0m" "$1"
	fi
}

# things title
function myecho2thing()
{
	echo
	if [ "$1" ]; then
		# 绿底黑字
		words=${1}${wordblank}
		echo -e "\033[42;30m ---> ${words:0:$wordlength} \033[0m"
	fi
}

# steps title
function myecho3step()
{
    echo
	if [ "$1" ]; then
		# 黄色字
		echo -e "\033[33m - $1 \033[0m"
	fi
}

# reference title
function myecho4ref()
{
	if [ "$1" ]; then
		echo -e "$1"
	fi
}

#--------------------------------------my func---------------------------------#

function build-linux {
	myecho2thing 'build aic'

    myecho3step 'AIC repo with Hudini'
    #	prompt '[repository...] sync'
    	#repo init -u ssh://android.intel.com/manifests -b android/n/topic/aosp/container/7.1.2_r24 -m default_houdini.xml
    #	repo sync -cj5 -d
    
    myecho3step 'check env.'
    	env | grep NINJA
    
    	python2.7 -m pip --version
    	#sudo apt remove python-pip
    	#prompt '[Install...] pip'
    	#curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    	#sudo python2.7 get-pip.py --force-reinstall
    
    	#prompt '[Checking...] python pip ok'
    	#sudo pip install Mako
    #	prompt '[Checking...] env. ok'
    
    	#prompt 'remove out/target/product/system app & lib'
    	#rm -fr out/target/product/cloud/system/lib/
    	#rm -fr out/target/product/cloud/system/lib64/
    	#rm -fr out/target/product/cloud/system/app/tmgp/
    
    	source build/envsetup.sh 
    	# lunch 
    	# 19. multidroid_cloud-userdebug
    	lunch 19

    myecho3step 'make'
    	#prompt '[make clean...] ok'
    	#make clean
    	#prompt '[make clobber...] ok'
    	#make clobber
    
    	#prompt '[make...] start make ?'
        make multidroid -j16 && aic-build
    	#make multidroid -j16 2>&1 | tee mylog-$VERSION.cloud
        #make multidroid -j16 && aic-build 2>&1 | tee mylog-$VERSION.cloud
}
function build-linux {
	myecho2thing 'build linux'
    myecho4ref 'https://blog.csdn.net/lingran07/article/details/7643957'

    check-permission
    dir=$2
    cd $dir
    pwd

    myecho3step 'source code'
    myecho4ref 'https://www.kernel.org'
    	#tar xzvf linux-4.18-rc7.tar.gz
    	#cd linux-4.18-rc7/
#		cp /boot/config-4.4.0-131-generic .config
#		make menuconfig
#		# disable LOCKDEP_SUPPORT: change 'def_bool y' to 'bool' in vim arch/x86/Kconfig
#		make oldconfig

    myecho3step 'prerequsites'
    	#sudo apt-get update
    	#sudo apt-get install -y bison
    	#sudo apt-get install -y flex
    	#sudo apt-get install -y libncurses5-dev
    	#sudo apt-get install -y libelf-dev
    	#sudo apt-get install -y libssl-dev
    	myecho3step '.config'
    
    myecho3step 'for boot firmware'
    	#sudo apt install intel-microcode
    	# [Download...] https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linu-firmware.git/tree/i915
    	#sudo cp ../linux-4.18-rc7-missing-firmware-libs/* /lib/firmware/i915/	

	myecho3step 'make'
		make clean
		make -j16
#		make modules

	myecho3step 'make install'
		make modules_install
		make install

	myecho3step 'update grub'
		update-grub

    cd -

	myecho3step 'reboot'
		myprompt 'reboot'
#    	#GRUB_HIDDEN_TIMEOUT=0
#    	#GRUB_HIDDEN_TIMEOUT_QUIET=true
#    	GRUB_HIDDEN_TIMEOUT=8
#    	GRUB_HIDDEN_TIMEOUT_QUIET=false

    	#sudo update-grub
		sudo reboot
}
function mygit {
	myecho2thing 'simple git operation'

    myprompt 'git status'
    git status

    myprompt 'git commit'
    git commit

    myprompt 'git log'
    git log

    myprompt 'git pull'
    git pull origin master

    myprompt 'git push'
    git push origin master

    myprompt 'git branch'
    git branch -av
}
function mylink {

	ln -s $dir/aic .
	ln -s $dir/aic-manager.tar.gz .
	ln -s $dir/android.tar.gz .
}
function myreboot {
	top
	myprompt 'Do you really want to reboot?'
	sudo reboot
}
function myrm {
    target=$2
    echo 'target' $target
    echo

    myprompt "rm ${target}"
    rm -fr $target
}
function mysave {
	newdir=bak-source/$dir
	echo 'newdir '$newdir
	mkdir $newdir
	sudo mv aic aic-manager.tar.gz android.tar.gz workdir $newdir
}
function scp-aic {
	myecho2thing 'scp aic images'

    dir=$2
    where=$3
    echo 'where:' $where
    tag=$4

    cd ${dir}

    case $where in
        xy2)
            dst='xy2@10.239.82.126:~/yuan/current/'
            ;;
        xy4)
            dst='xy4@10.239.76.28:~/yuan/current/'
            ;;
        go)
            dst='binyang@10.239.93.166:~/yuan/current/'
            ;;
        hop)
            dst='binyang@10.239.93.163:~/yuan/current/'
            ;;
        backup)
            dst='xy2@10.239.82.126:/home/xy2/aic-all/source-bak/out-bak/'
            ;;
        *)
            echo
            echo 'where to scp?'
            echo
            echo 'where: xy2, xy4, go, hop'
            echo
            exit
    esac

    echo
    mkdir -p ${tag}
    mv aic aic-manager.tar.gz android.tar.gz ${tag}

    echo 'src:' ${tag}/
    echo 'dst:' $dst

    scp -r ${tag} $dst 2>&1
    #scp -r out/target/product/cloud/source1-1021-no-uevent-patch-show-netlink-pid/ xy4@10.239.76.28:~/yuan/scp/

    cd -
}
function myscp {
	myecho2thing 'scp'
    echo 'myscp:' $@
    echo

    #scp -r yuan.tar.gz xy4@10.239.76.28:~/yuan

    target=$2
    where=$3
    echo 'where:' $where

    case $where in
        xy2)
            dst=xy2@10.239.82.126:~/yuan/scp/
            ;;
        xy4)
            #dst=xy4@10.239.76.28:~/yuan/scp/
            #echo 'dst:' $dst
            dst='xy4@10.239.76.28:~/yuan/scp/'
            ;;
        go)
            dst=binyang@10.239.93.166:~/yuan/scp/
            ;;
        hop)
            dst=binyang@10.239.93.163:~/yuan/scp/
            ;;
        *)
            echo
            echo 'where to scp?'
            echo
            echo 'where: xy2, xy4, go, hop'
            echo
            exit
    esac

    echo 'target:' $target
    echo 'dst:' $dst
    echo
    scp -r $target $dst
}
function mytar {
	myecho2thing 'tar'
    echo 'mytar:' $@
    echo

    target=$2
    echo 'target' $target
    tar cvzf ${target}.tar.gz ${target}
}
#--------------------------------------main------------------------------------#

function init {
	myecho2thing 'init'

	function when {
		date
	}
	function where {
		#myecho 'https://www.cnblogs.com/cnpirate/archive/2012/09/16/2687519.html'
		if [[ -z "$CWD" ]] || [[ ! -d "$CWD" ]]; then
			#echo 'use the current directory.'
			nowdir=$(pwd)
		else
			#echo 'cd new directory.'
			cd $CWD
			nowdir=$(pwd)
		fi
		echo 'nowdir: '${nowdir}
	}
	function who {
		echo 'You are '${USER}''
	}

    when && where && who
}


function go {
	
	myecho2thing 'go'

	myecho3step ''
}

function main {

	myecho1task 'xy tools - 20181020'
	myecho4ref ''
    echo 'main:' $@

	init

    case $command in
    	build-aic)
    		build-linux $@
    		;;
    	build-linux)
    		build-linux $@
    		;;
    	git)
    		mygit
    		;;
    	link)
    		mylink
    		;;
    	reboot)
    		myreboot
    		;;
    	rm)
    		myrm $@
    		;;
    	save)
    		mysave
    		;;
    	scp)
    		myscp $@
    		;;
    	scp-aic)
    		scp-aic $@
    		;;
    	tar)
    		mytar $@
    		;;
    	*)
            echo
            echo 'Unknown command, exiting...'
            echo
     		echo 'Usage:
            '$0 'command param1 param2 ...'

            echo '
            commands --->
            build-aic, build-linux, git, link, reboot, rm, save, scp, scp-aic'

            echo 'Example:
            '$0 'scp src:<path>/<file> dst'
            echo
    		exit
    esac


	#go
	myecho2thing 'End'
}


# start from here

	main $@ | tee -a mylog-tools.txt

